# Generated by Django 5.2.4 on 2025-08-06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("personnel", "0010_employeetransferlog_escalationrule_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Добавляем новые поля в Division
        migrations.AddField(
            model_name="division",
            name="code",
            field=models.CharField(
                blank=True,
                help_text="Уникальный код подразделения",
                max_length=50,
                verbose_name="Код подразделения",
            ),
        ),
        migrations.AddField(
            model_name="division",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Дополнительная информация о подразделении",
                verbose_name="Описание",
            ),
        ),
        migrations.AddField(
            model_name="division",
            name="contact_info",
            field=models.TextField(blank=True, verbose_name="Контактная информация"),
        ),
        migrations.AddField(
            model_name="division",
            name="head_position",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="headed_divisions",
                to="personnel.position",
                verbose_name="Должность руководителя",
            ),
        ),

        # Обновляем существующие поля Division
        migrations.AlterField(
            model_name="division",
            name="hierarchy_variant",
            field=models.CharField(
                choices=[
                    ("VARIANT_1", "Компания → Департаменты → Управления → Отделы"),
                    ("VARIANT_2", "Компания → Управления → Отделы"),
                    ("VARIANT_3", "Компания → Отделы"),
                ],
                default="VARIANT_1",
                help_text="Вариант организационной иерархии для данной структуры",
                max_length=20,
                verbose_name="Вариант иерархии",
            ),
        ),

        # Добавляем новые поля в Position
        migrations.AddField(
            model_name="position",
            name="description",
            field=models.TextField(blank=True, verbose_name="Описание должности"),
        ),
        migrations.AddField(
            model_name="position",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Неактивные должности не отображаются при выборе",
                verbose_name="Активна",
            ),
        ),

        # Добавляем новые поля в Employee
        migrations.AddField(
            model_name="employee",
            name="employee_number",
            field=models.CharField(
                blank=True, max_length=50, unique=True, verbose_name="Табельный номер"
            ),
        ),
        migrations.AddField(
            model_name="employee",
            name="contact_phone",
            field=models.CharField(
                blank=True, max_length=50, verbose_name="Контактный телефон"
            ),
        ),
        migrations.AddField(
            model_name="employee",
            name="contact_email",
            field=models.EmailField(blank=True, verbose_name="Контактный email"),
        ),
        migrations.AddField(
            model_name="employee",
            name="notes",
            field=models.TextField(blank=True, verbose_name="Примечания"),
        ),

        # Добавляем новые поля в UserProfile
        migrations.AddField(
            model_name="userprofile",
            name="phone",
            field=models.CharField(blank=True, max_length=50, verbose_name="Телефон"),
        ),

        # Добавляем новые поля в SecondmentRequest
        migrations.AddField(
            model_name="secondmentrequest",
            name="return_requested",
            field=models.BooleanField(default=False, verbose_name="Запрошен возврат"),
        ),
        migrations.AddField(
            model_name="secondmentrequest",
            name="return_requested_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="requested_returns",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Возврат запросил",
            ),
        ),
        migrations.AddField(
            model_name="secondmentrequest",
            name="return_approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_returns",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Возврат одобрил",
            ),
        ),

        # Добавляем новые поля в StaffingUnit
        migrations.AddField(
            model_name="staffingunit",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_staffing_units",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Создано пользователем",
            ),
        ),

        # Добавляем поле file_format в PersonnelReport
        migrations.AddField(
            model_name="personnelreport",
            name="file_format",
            field=models.CharField(
                choices=[("docx", "Word"), ("xlsx", "Excel"), ("pdf", "PDF")],
                default="docx",
                max_length=10,
                verbose_name="Формат файла",
            ),
        ),

        # Создаем новую модель EmployeeTransferLog
        migrations.CreateModel(
            name="EmployeeTransferLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transfer_date",
                    models.DateField(verbose_name="Дата перевода"),
                ),
                (
                    "reason",
                    models.TextField(blank=True, verbose_name="Основание перевода"),
                ),
                (
                    "order_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Номер приказа"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfer_logs",
                        to="personnel.employee",
                        verbose_name="Сотрудник",
                    ),
                ),
                (
                    "from_division",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transfers_from",
                        to="personnel.division",
                        verbose_name="Из подразделения",
                    ),
                ),
                (
                    "from_position",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transfers_from_position",
                        to="personnel.position",
                        verbose_name="С должности",
                    ),
                ),
                (
                    "to_division",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transfers_to",
                        to="personnel.division",
                        verbose_name="В подразделение",
                    ),
                ),
                (
                    "to_position",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transfers_to_position",
                        to="personnel.position",
                        verbose_name="На должность",
                    ),
                ),
            ],
            options={
                "ordering": ["-transfer_date", "-created_at"],
                "verbose_name": "Журнал переводов",
                "verbose_name_plural": "Журнал переводов",
            },
        ),

        # Создаем новую модель EscalationRule
        migrations.CreateModel(
            name="EscalationRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название правила"),
                ),
                (
                    "time_threshold",
                    models.TimeField(
                        help_text="Время, после которого срабатывает эскалация",
                        verbose_name="Временной порог",
                    ),
                ),
                (
                    "notification_roles",
                    models.JSONField(
                        default=list,
                        help_text="Список ролей, которые получат уведомление",
                        verbose_name="Роли для уведомления",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активно"),
                ),
                (
                    "auto_copy_statuses",
                    models.BooleanField(
                        default=False,
                        help_text="Копировать статусы с предыдущего дня при срабатывании",
                        verbose_name="Автоматически копировать статусы",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["time_threshold"],
                "verbose_name": "Правило эскалации",
                "verbose_name_plural": "Правила эскалации",
            },
        ),

        # Добавляем индексы
        migrations.AddIndex(
            model_name="division",
            index=models.Index(fields=["division_type", "parent_division"], name="personnel_d_divisio_abc123_idx"),
        ),
        migrations.AddIndex(
            model_name="division",
            index=models.Index(fields=["code"], name="personnel_d_code_def456_idx"),
        ),
        migrations.AddIndex(
            model_name="position",
            index=models.Index(fields=["level"], name="personnel_p_level_ghi789_idx"),
        ),
        migrations.AddIndex(
            model_name="position",
            index=models.Index(fields=["is_active"], name="personnel_p_is_acti_jkl012_idx"),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(fields=["is_active", "division"], name="personnel_e_is_acti_mno345_idx"),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(fields=["full_name"], name="personnel_e_full_na_pqr678_idx"),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(fields=["employee_number"], name="personnel_e_employe_stu901_idx"),
        ),
        migrations.AddIndex(
            model_name="employeestatuslog",
            index=models.Index(fields=["status", "date_from"], name="personnel_e_status_vwx234_idx"),
        ),
        migrations.AddIndex(
            model_name="divisionstatusupdate",
            index=models.Index(fields=["update_date", "is_updated"], name="personnel_d_update_yza567_idx"),
        ),
        migrations.AddIndex(
            model_name="secondmentrequest",
            index=models.Index(fields=["status", "date_from"], name="personnel_s_status_bcd890_idx"),
        ),
        migrations.AddIndex(
            model_name="secondmentrequest",
            index=models.Index(fields=["employee", "status"], name="personnel_s_employe_efg123_idx"),
        ),
        migrations.AddIndex(
            model_name="staffingunit",
            index=models.Index(fields=["division", "position"], name="personnel_s_divisio_hij456_idx"),
        ),
        migrations.AddIndex(
            model_name="vacancy",
            index=models.Index(fields=["is_active", "priority"], name="personnel_v_is_acti_klm789_idx"),
        ),
        migrations.AddIndex(
            model_name="personnelreport",
            index=models.Index(fields=["report_date", "division"], name="personnel_p_report_nop012_idx"),
        ),
        migrations.AddIndex(
            model_name="personnelreport",
            index=models.Index(fields=["report_type", "created_at"], name="personnel_p_report_qrs345_idx"),
        ),

        # Добавляем ограничения
        migrations.AddConstraint(
            model_name="division",
            constraint=models.UniqueConstraint(
                condition=models.Q(code__isnull=False) & ~models.Q(code=""),
                fields=["code", "parent_division"],
                name="unique_code_per_parent",
            ),
        ),

        # Обновляем verbose_name для моделей
        migrations.AlterModelOptions(
            name="division",
            options={
                "ordering": ["division_type", "name"],
                "verbose_name": "Подразделение",
                "verbose_name_plural": "Подразделения",
            },
        ),
        migrations.AlterModelOptions(
            name="position",
            options={
                "ordering": ["level", "name"],
                "verbose_name": "Должность",
                "verbose_name_plural": "Должности",
            },
        ),
        migrations.AlterModelOptions(
            name="employee",
            options={
                "ordering": ["position__level", "full_name"],
                "verbose_name": "Сотрудник",
                "verbose_name_plural": "Сотрудники",
            },
        ),
        migrations.AlterModelOptions(
            name="employeestatuslog",
            options={
                "ordering": ["-date_from", "-id"],
                "verbose_name": "Журнал статусов",
                "verbose_name_plural": "Журналы статусов",
            },
        ),
        migrations.AlterModelOptions(
            name="userprofile",
            options={
                "verbose_name": "Профиль пользователя",
                "verbose_name_plural": "Профили пользователей",
            },
        ),
        migrations.AlterModelOptions(
            name="staffingunit",
            options={
                "verbose_name": "Штатная единица",
                "verbose_name_plural": "Штатные единицы",
            },
        ),
        migrations.AlterModelOptions(
            name="vacancy",
            options={
                "ordering": ["priority", "-created_at"],
                "verbose_name": "Вакансия",
                "verbose_name_plural": "Вакансии",
            },
        ),
        migrations.AlterModelOptions(
            name="divisionstatusupdate",
            options={
                "ordering": ["-update_date", "division__name"],
                "verbose_name": "Обновление статусов подразделения",
                "verbose_name_plural": "Обновления статусов подразделений",
            },
        ),
        migrations.AlterModelOptions(
            name="personnelreport",
            options={
                "ordering": ["-report_date", "-created_at"],
                "verbose_name": "Отчет по личному составу",
                "verbose_name_plural": "Отчеты по личному составу",
            },
        ),
        migrations.AlterModelOptions(
            name="secondmentrequest",
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Запрос на прикомандирование",
                "verbose_name_plural": "Запросы на прикомандирование",
            },
        ),
    ]